package atlas;


///////////////////////////////////////////////////////////
//  
//   This message contains parameters that are available to control the 
//   electric motor in the power-pack. The controller output is current (A)
//  
//   For more information, see the supplemental robot data package
//  
//   Omitting saturations the output command would be:
//
//        k_psi_p   * ( psi_d - psi )        +
//        k_psi_i   * 1/s * ( psi_d - psi )  +
//        k_psi_d   * s *( psi_d - psi )     +
//        k_rpm_p   * ( psi_d - psi )        +
//        k_rpm_i   * 1/s * ( rpm_d - rpm )  +
//        k_rpm_d   * s * ( rpm_d - rpm )    +
//        ff_psi_d  * psi_d                  +
//        ff_rpm_d  * rpm_d                  +
//        ff_const


struct pump_command_t 
{
  int64_t utime;

  float k_psi_p;    // Gain on pressure error (A/psi)
  float k_psi_i;    // Gain on the integral of the pressure error (A/(psi/s)
  float k_psi_d;    // Gain on the derivative of the pressure error (A/(psi s)

  float k_rpm_p;    // Gain on rpm error (A / rpm)
  float k_rpm_i;    // Gain on the integral of the rpm error (A / (rpm s))
  float k_rpm_d;    // Gain on the derivative of the rpm error (A / (rpm/s)

  float ff_rpm_d;   // Feed-forward gain on the desired rpm (A / rpm)
  float ff_psi_d;   // Feed-forward gain on the desired pressure (A / psi)
  float ff_const;   // Constant current term (Amps)

  float psi_i_max;  // Max. abs. value to which the integral psi error is clamped (psi s)
  float rpm_i_max;  // Max. abs. value to which the integral rpm error is clamped (rpm s)

  // Max. command output (A). Default is 60 Amps. 
  // This value may need to be lower than the default in order to avoid
  // causing the motor driver to fault. 
  float cmd_max;    
  
  int16_t desired_psi; // default should be 1500
  int16_t desired_rpm; // default should be 5000
}
